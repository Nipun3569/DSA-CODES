#include<iostream>
#include<stdlib.h>
using namespace std;

struct node{
	int data;
	struct node * next;
};

void linkedListTraversal(struct node*head){
	struct node*ptr=head;
		do{
			cout<<ptr->data<<endl;
			ptr=ptr->next;
		}while(ptr!=head);
		
}

struct node* insertAtFirst(struct node* head,int data){
	struct node*ptr=(struct node* )malloc(sizeof(struct node));
		ptr->data=data;
	struct node*p=head->next;
	while(p->next!=head){
		p=p->next;
	}
	//at this point p points to last node of this circular linked list
	p->next=ptr;//now it will point to ptr
	ptr->next=head;
	head=ptr;
	return head;
	

}
struct node * insertAtIndex(struct node *head, int data, int index){
    struct node * ptr = (struct node *) malloc(sizeof(struct node));
    struct node * p = head;
    int i = 0;
 
    while (i!=index-1)
    {
        p = p->next;
        i++;
    }
    ptr->data = data;
    ptr->next = p->next;
    p->next=ptr;
    
    return head;
}
int main(){
    struct node * head;
    struct node * second;
    struct node * third;
    struct node * fourth;
    
    head=(struct node*)malloc(sizeof(struct node));
    second=(struct node*)malloc(sizeof(struct node));
    third=(struct node*)malloc(sizeof(struct node));
    fourth=(struct node*)malloc(sizeof(struct node));
    
    head->data=56;
    head->next=second;
    
    second->data=6;
    second->next=third;
    
    third->data=3;
    third->next=fourth;
    
    fourth->data=4;
    fourth->next=head;
    head=insertAtFirst(head,80);
    linkedListTraversal(head);
    
    
	

}
